[
  {
    "id": 1,
    "title": "Two Sum",
    "difficulty": "Easy",
    "description": "Given an array of integers and a target, print the indices of the two numbers that add up to the target.",
    "input_format": "First line: n\nSecond line: n integers\nThird line: target",
    "output_format": "Two integers (indices)",
    "sample_testcases": [
      { "input": "4\n2 7 11 15\n9", "output": "0 1" },
      { "input": "3\n3 2 4\n6", "output": "1 2" }
    ]
  },
  {
    "id": 2,
    "title": "Palindrome Check",
    "difficulty": "Easy",
    "description": "Check if the given string is a palindrome (ignoring case and non-alphanumeric characters). Print true or false.",
    "input_format": "A single string",
    "output_format": "true or false",
    "sample_testcases": [
      { "input": "A man, a plan, a canal: Panama", "output": "true" },
      { "input": "race a car", "output": "false" }
    ]
  },
  {
    "id": 3,
    "title": "Longest Substring Without Repeating Characters",
    "difficulty": "Medium",
    "description": "Given a string, print the length of the longest substring without repeating characters.",
    "input_format": "A string s",
    "output_format": "An integer",
    "sample_testcases": [
      { "input": "abcabcbb", "output": "3" },
      { "input": "bbbbb", "output": "1" }
    ]
  },
  {
    "id": 4,
    "title": "3Sum",
    "difficulty": "Medium",
    "description": "Find all unique triplets in the array that sum up to zero. Print each triplet on a new line.",
    "input_format": "First line: n\nSecond line: n integers",
    "output_format": "Triplets separated by spaces",
    "sample_testcases": [
      { "input": "6\n-1 0 1 2 -1 -4", "output": "-1 -1 2\n-1 0 1" }
    ]
  },
  {
    "id": 5,
    "title": "Binary Tree Level Order Traversal",
    "difficulty": "Medium",
    "description": "Given a binary tree in level order format (null for empty nodes), print the level order traversal.",
    "input_format": "Array representation of tree (space separated, null for empty)",
    "output_format": "Each level in one line",
    "sample_testcases": [
      { "input": "3 9 20 null null 15 7", "output": "3\n9 20\n15 7" }
    ]
  },
  {
    "id": 6,
    "title": "Top K Frequent Elements",
    "difficulty": "Medium",
    "description": "Given an array of integers, print the k most frequent elements in any order.",
    "input_format": "First line: n\nSecond line: n integers\nThird line: k",
    "output_format": "k integers",
    "sample_testcases": [
      { "input": "6\n1 1 1 2 2 3\n2", "output": "1 2" }
    ]
  },
  {
    "id": 7,
    "title": "Course Schedule",
    "difficulty": "Medium",
    "description": "Given number of courses and prerequisites, determine if all courses can be finished. Print true or false.",
    "input_format": "First line: n (number of courses)\nSecond line: m (number of prerequisites)\nNext m lines: two integers a b meaning a depends on b",
    "output_format": "true or false",
    "sample_testcases": [
      { "input": "2\n1\n1 0", "output": "true" },
      { "input": "2\n2\n1 0\n0 1", "output": "false" }
    ]
  },
  {
    "id": 8,
    "title": "Word Break",
    "difficulty": "Medium",
    "description": "Given a string and a dictionary of words, check if the string can be segmented into words from the dictionary.",
    "input_format": "First line: string s\nSecond line: integer d\nNext d lines: dictionary words",
    "output_format": "true or false",
    "sample_testcases": [
      { "input": "leetcode\n2\nleet\ncode", "output": "true" },
      { "input": "catsandog\n5\ncats\ndog\nsand\nand\ncat", "output": "false" }
    ]
  },
  {
    "id": 9,
    "title": "Median of Two Sorted Arrays",
    "difficulty": "Hard",
    "description": "Find the median of two sorted arrays.",
    "input_format": "First line: n m\nSecond line: n integers\nThird line: m integers",
    "output_format": "A float (median)",
    "sample_testcases": [
      { "input": "2 1\n1 3\n2", "output": "2.0" },
      { "input": "2 2\n1 2\n3 4", "output": "2.5" }
    ]
  },
  {
    "id": 10,
    "title": "N-Queens",
    "difficulty": "Hard",
    "description": "Place n queens on an n√ón board so that no two queens attack each other. Print all solutions.",
    "input_format": "An integer n",
    "output_format": "Each solution as n lines, separated by a blank line",
    "sample_testcases": [
      { "input": "4", "output": ".Q..\n...Q\nQ...\n..Q.\n\n..Q.\nQ...\n...Q\n.Q.." }
    ]
  }
]
